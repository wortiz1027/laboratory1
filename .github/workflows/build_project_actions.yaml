name: Build Project
run-name: ${{ github.actor }} Building the laboratory1 services

on:
  push:
    branches: [develop, main]
    tags:
    - v[0-9]+.[0-9]+.[0-9]+
  pull_request:
    branches: [develop, main]

env:
  REGISTRY: docker.io
  IMAGE_NAME: laboratory1-services
  PROJECT_NAME: ${{ github.repository }}
  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DOCKER_TOKEN: ${{secrets.DOCKER_TOKEN}}

jobs:
  setup:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: chackout-project-source
      uses: actions/checkout@v3

    - name: set-jdk-17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: adopt
        architecture: x64

    - name: setup-gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: 8.0.2

    - name: execute-gradle-build
      run: ./gradlew build
  dependency_check:
    needs: setup
    steps:
    - name: dependency-check
      uses: dependency-check/Dependency-Check_Action@main
      id: dependency_check
      with:
        project: ${{ github.repository }}
        path: .
        format: HTML
        out: reports
        args: >
          --failOnCVSS 7
          --enableRetired
    - name: Upload Test results
      uses: actions/upload-artifact@master
      with:
        name: dependency-check-report
        path: ${{ github.workspace }}/reports
#    build:
#        needs: dependency-check
#    unit-test:
#        needs: build
#    integration-test:
#        needs: build
#    publish-docker:
#    -   uses: actions/checkout@v3
#    -   id: docker-metadata
#        name: docker-metadata
#        uses: docker/metadata-action@v3
#        with:
#            images: ${{ env.IMAGE_NAME }}
#            tags: |
#                type=semver,pattern={{version}}
#                type=semver,pattern={{major}}.{{minor}}
#                type=raw,value={{sha}},enable=${{ github.ref_type != 'tag' }}
#    -   name: docker-login
#        uses: docker/login-action@v2
#        if: ${{ github.ref_type == 'tag' }}
#        with:
#            username: ${{ env.DOCKER_USERNAME }}
#            password: ${{ env.DOCKER_TOKEN }}
#    -   name: Build and push Docker image
#        uses: docker/build-push-action@v2
#        with:
#            context: .
#            push: ${{ github.event.base_ref =='refs/heads/main' && github.ref_type == 'tag' && !startsWith(github.ref, 'refs/tags/v0.')}}
#            tags: ${{ steps.docker-metadata.outputs.tags }}
#            labels: ${{ steps.docker-metadata.outputs.labels }}
#
#    publish-artifact:
